{"mappings":"YAkEA,IAAwBA,KAsBR,MArBE,IAAIC,SAAQ,SAACC,EAASC,GACpCC,QAAQC,IAAI,6BACOC,YAAR,WACMC,KAAKC,SAEP,GAOXN,EANa,CACXO,UAAWT,EACXU,SAAU,UACVC,IAAK,KAKPR,EAAO,+CAAoDS,OAALZ,G,GAEvD,I,KAMJa,MAAK,SAAAC,GACJV,QAAQC,IAAIS,E,IAEbC,OAAM,SAAAC,GACLZ,QAAQC,IAAIW,E","sources":["src/js/promisification.js"],"sourcesContent":["// https://api.github.com/users/riko1212\n// function myAsyncFunction(url) {\n//   const promise = new Promise((resolve, reject) => {\n//     const xhr = new XMLHttpRequest();\n\n//     xhr.open('GET', url);\n//     xhr.send();\n\n//     xhr.addEventListener('load', () => {\n//       if (xhr.status !== 200) {\n//         reject(xhr.status);\n//       } else {\n//         resolve(xhr.responseText);\n//       }\n//     });\n//   });\n\n//   return promise;\n// }\n\n// myAsyncFunction('https://api.github.com/users/riko1212')\n//   .then((data) => {\n//     data = JSON.parse(data);\n//     return data;\n//   })\n//   .then((data) => {\n//     console.log(data);\n//   })\n//   .catch((err) => {\n//     console.log(err);\n//   });\n\n//? Solicitud del usuario mediante callbacks\n\n// const fetchUserByName = (name, onSuccess, onError) => {\n//   console.log('Робимо запит на сервер...');\n\n//   setTimeout(() => {\n//     const isDone = Math.random();\n\n//     if (isDone > 0.5) {\n//       const user = {\n//         firstName: name,\n//         lastName: 'Francis',\n//         age: 30,\n//       };\n\n//       onSuccess(user);\n//     } else {\n//       onError(`No se encontró ningún usuario con el nombre ${name}`);\n//     }\n//   }, 2000);\n// };\n\n// const handleSuccessFetch = (data) => {\n//   console.log(data);\n// };\n\n// const handleErrorFetch = (err) => {\n//   console.log(err);\n// };\n\n// fetchUserByName('Ida', handleSuccessFetch, handleErrorFetch);\n\n//?Solicitud del usuario mediante promesas\n\nconst fetchUserByName = name => {\n  const promise = new Promise((resolve, reject) => {\n    console.log('Робимо запит на сервер...');\n    setTimeout(() => {\n      const isDone = Math.random();\n\n      if (isDone > 0.5) {\n        const user = {\n          firstName: name,\n          lastName: 'Francis',\n          age: 30,\n        };\n\n        resolve(user);\n      } else {\n        reject(`No se encontró ningún usuario con el nombre ${name}`);\n      }\n    }, 2000);\n  });\n  return promise;\n};\n\nfetchUserByName('Ida')\n  .then(data => {\n    console.log(data);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n"],"names":["name","Promise","resolve","reject","console","log","setTimeout","Math","random","firstName","lastName","age","concat","then","data","catch","err"],"version":3,"file":"promisification.f7477426.js.map"}